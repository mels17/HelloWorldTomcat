<?xml version="1.0" encoding="UTF-8"?>
<project name="module_helloworldtomcat" default="compile.module.helloworldtomcat">
  <dirname property="module.helloworldtomcat.basedir" file="${ant.file.module_helloworldtomcat}"/>
  
  <property name="module.jdk.home.helloworldtomcat" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.helloworldtomcat" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.helloworldtomcat" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.helloworldtomcat" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="helloworldtomcat.output.dir" value="${module.helloworldtomcat.basedir}/out/production/HelloWorldTomcat"/>
  <property name="helloworldtomcat.testoutput.dir" value="${module.helloworldtomcat.basedir}/out/test/HelloWorldTomcat"/>
  
  <path id="helloworldtomcat.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="helloworldtomcat.module.production.classpath">
    <path refid="${module.jdk.classpath.helloworldtomcat}"/>
    <path refid="library.tomcat_9.0.7.classpath"/>
    <path refid="library.postgresql-42.2.21.classpath"/>
  </path>
  
  <path id="helloworldtomcat.runtime.production.module.classpath">
    <pathelement location="${helloworldtomcat.output.dir}"/>
    <path refid="library.postgresql-42.2.21.classpath"/>
  </path>
  
  <path id="helloworldtomcat.module.classpath">
    <path refid="${module.jdk.classpath.helloworldtomcat}"/>
    <pathelement location="${helloworldtomcat.output.dir}"/>
    <path refid="library.tomcat_9.0.7.classpath"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <path refid="library.postgresql-42.2.21.classpath"/>
  </path>
  
  <path id="helloworldtomcat.runtime.module.classpath">
    <pathelement location="${helloworldtomcat.testoutput.dir}"/>
    <pathelement location="${helloworldtomcat.output.dir}"/>
    <path refid="library.tomcat_9.0.7.classpath"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <path refid="library.postgresql-42.2.21.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.helloworldtomcat">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.helloworldtomcat">
    <patternset refid="excluded.from.module.helloworldtomcat"/>
  </patternset>
  
  <path id="helloworldtomcat.module.sourcepath">
    <dirset dir="${module.helloworldtomcat.basedir}">
      <include name="src/main"/>
    </dirset>
  </path>
  
  <path id="helloworldtomcat.module.test.sourcepath">
    <dirset dir="${module.helloworldtomcat.basedir}">
      <include name="src/test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.helloworldtomcat" depends="compile.module.helloworldtomcat.production,compile.module.helloworldtomcat.tests" description="Compile module HelloWorldTomcat"/>
  
  <target name="compile.module.helloworldtomcat.production" depends="register.custom.compilers" description="Compile module HelloWorldTomcat; production classes">
    <mkdir dir="${helloworldtomcat.output.dir}"/>
    <javac2 destdir="${helloworldtomcat.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.helloworldtomcat}/javac">
      <compilerarg line="${compiler.args.helloworldtomcat}"/>
      <bootclasspath refid="helloworldtomcat.module.bootclasspath"/>
      <classpath refid="helloworldtomcat.module.production.classpath"/>
      <src refid="helloworldtomcat.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.helloworldtomcat"/>
    </javac2>
    
    <copy todir="${helloworldtomcat.output.dir}">
      <fileset dir="${module.helloworldtomcat.basedir}/src/main">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.helloworldtomcat.tests" depends="register.custom.compilers,compile.module.helloworldtomcat.production" description="compile module HelloWorldTomcat; test classes" unless="skip.tests">
    <mkdir dir="${helloworldtomcat.testoutput.dir}"/>
    <javac2 destdir="${helloworldtomcat.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.helloworldtomcat}/javac">
      <compilerarg line="${compiler.args.helloworldtomcat}"/>
      <bootclasspath refid="helloworldtomcat.module.bootclasspath"/>
      <classpath refid="helloworldtomcat.module.classpath"/>
      <src refid="helloworldtomcat.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.helloworldtomcat"/>
    </javac2>
    
    <copy todir="${helloworldtomcat.testoutput.dir}">
      <fileset dir="${module.helloworldtomcat.basedir}/src/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.helloworldtomcat" description="cleanup module">
    <delete dir="${helloworldtomcat.output.dir}"/>
    <delete dir="${helloworldtomcat.testoutput.dir}"/>
  </target>
</project>